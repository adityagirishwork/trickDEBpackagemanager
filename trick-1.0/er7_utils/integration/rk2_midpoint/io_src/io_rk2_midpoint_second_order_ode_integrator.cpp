/**
 * This file was automatically generated by the ICG based on the file:
 * /users/agirish/trick_tutorial/trick/trick_source/er7_utils/integration/rk2_midpoint/include/rk2_midpoint_second_order_ode_integrator.hh
 * This file contains database parameter declarations specific to the
 * data structures and enumerated types declared in the above file.
 * These database parameters are used by the Trick input and
 * data recording processors to gain access to important simulation
 * variable information.
 */

#define TRICK_IN_IOSRC
#include <stdlib.h>
#include "trick/MemoryManager.hh"
#include "trick/attributes.h"
#include "trick/parameter_types.h"
#include "trick/ClassSizeCheck.hh"
#include "trick/UnitsMap.hh"
#include "trick/checkpoint_stl.hh"
#include "/users/agirish/trick_tutorial/trick/trick_source/er7_utils/integration/rk2_midpoint/include/rk2_midpoint_second_order_ode_integrator.hh"

extern "C" {

ATTRIBUTES attrer7_utils__RK2MidpointSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_pos", "double", "1", "", "",
  "n Position at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"posdot", "double", "1", "", "",
  "n Position derivatives.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__RK2MidpointSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__RK2MidpointSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__RK2MidpointSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::SecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__RK2MidpointSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__RK2MidpointSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__RK2MidpointSecondOrderODEIntegrator() {
    return sizeof(er7_utils::RK2MidpointSecondOrderODEIntegrator) ;
}

void io_src_destruct_er7_utils__RK2MidpointSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::RK2MidpointSecondOrderODEIntegrator* temp = (er7_utils::RK2MidpointSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~RK2MidpointSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__RK2MidpointSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::RK2MidpointSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__RK2MidpointSecondOrderODEIntegrator {
    UnitsMaper7_utils__RK2MidpointSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("RK2MidpointSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("RK2MidpointSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("RK2MidpointSecondOrderODEIntegrator_init_pos", "1") ;
        units_map_ptr->add_param("RK2MidpointSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("RK2MidpointSecondOrderODEIntegrator_posdot", "1") ;
        units_map_ptr->add_param("RK2MidpointSecondOrderODEIntegrator_dtheta", "1") ;
    }
} umer7_utils__RK2MidpointSecondOrderODEIntegrator;

extern "C" {

ATTRIBUTES attrer7_utils__RK2MidpointSimpleSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_pos", "double", "1", "", "",
  "n Position at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"posdot", "double", "1", "", "",
  "n Position derivatives.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__RK2MidpointSimpleSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__RK2MidpointSimpleSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__RK2MidpointSimpleSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::RK2MidpointSecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__RK2MidpointSimpleSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__RK2MidpointSimpleSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__RK2MidpointSimpleSecondOrderODEIntegrator() {
    return sizeof(er7_utils::RK2MidpointSimpleSecondOrderODEIntegrator) ;
}

void* io_src_allocate_er7_utils__RK2MidpointSimpleSecondOrderODEIntegrator(int num) {
    er7_utils::RK2MidpointSimpleSecondOrderODEIntegrator* temp = (er7_utils::RK2MidpointSimpleSecondOrderODEIntegrator*)calloc(num, sizeof(er7_utils::RK2MidpointSimpleSecondOrderODEIntegrator));
    for (int ii = 0; ii < num; ++ii) {
        new(&temp[ii]) er7_utils::RK2MidpointSimpleSecondOrderODEIntegrator();
    }
    return (void*)temp;
}

void io_src_destruct_er7_utils__RK2MidpointSimpleSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::RK2MidpointSimpleSecondOrderODEIntegrator* temp = (er7_utils::RK2MidpointSimpleSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~RK2MidpointSimpleSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__RK2MidpointSimpleSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::RK2MidpointSimpleSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__RK2MidpointSimpleSecondOrderODEIntegrator {
    UnitsMaper7_utils__RK2MidpointSimpleSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("RK2MidpointSimpleSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("RK2MidpointSimpleSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("RK2MidpointSimpleSecondOrderODEIntegrator_init_pos", "1") ;
        units_map_ptr->add_param("RK2MidpointSimpleSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("RK2MidpointSimpleSecondOrderODEIntegrator_posdot", "1") ;
        units_map_ptr->add_param("RK2MidpointSimpleSecondOrderODEIntegrator_dtheta", "1") ;
    }
} umer7_utils__RK2MidpointSimpleSecondOrderODEIntegrator;

extern "C" {

ATTRIBUTES attrer7_utils__RK2MidpointGeneralizedDerivSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_pos", "double", "1", "", "",
  "n Position at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"posdot", "double", "1", "", "",
  "n Position derivatives.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__RK2MidpointGeneralizedDerivSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__RK2MidpointGeneralizedDerivSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__RK2MidpointGeneralizedDerivSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::RK2MidpointSecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__RK2MidpointGeneralizedDerivSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__RK2MidpointGeneralizedDerivSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__RK2MidpointGeneralizedDerivSecondOrderODEIntegrator() {
    return sizeof(er7_utils::RK2MidpointGeneralizedDerivSecondOrderODEIntegrator) ;
}

void* io_src_allocate_er7_utils__RK2MidpointGeneralizedDerivSecondOrderODEIntegrator(int num) {
    er7_utils::RK2MidpointGeneralizedDerivSecondOrderODEIntegrator* temp = (er7_utils::RK2MidpointGeneralizedDerivSecondOrderODEIntegrator*)calloc(num, sizeof(er7_utils::RK2MidpointGeneralizedDerivSecondOrderODEIntegrator));
    for (int ii = 0; ii < num; ++ii) {
        new(&temp[ii]) er7_utils::RK2MidpointGeneralizedDerivSecondOrderODEIntegrator();
    }
    return (void*)temp;
}

void io_src_destruct_er7_utils__RK2MidpointGeneralizedDerivSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::RK2MidpointGeneralizedDerivSecondOrderODEIntegrator* temp = (er7_utils::RK2MidpointGeneralizedDerivSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~RK2MidpointGeneralizedDerivSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__RK2MidpointGeneralizedDerivSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::RK2MidpointGeneralizedDerivSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__RK2MidpointGeneralizedDerivSecondOrderODEIntegrator {
    UnitsMaper7_utils__RK2MidpointGeneralizedDerivSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("RK2MidpointGeneralizedDerivSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("RK2MidpointGeneralizedDerivSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("RK2MidpointGeneralizedDerivSecondOrderODEIntegrator_init_pos", "1") ;
        units_map_ptr->add_param("RK2MidpointGeneralizedDerivSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("RK2MidpointGeneralizedDerivSecondOrderODEIntegrator_posdot", "1") ;
        units_map_ptr->add_param("RK2MidpointGeneralizedDerivSecondOrderODEIntegrator_dtheta", "1") ;
    }
} umer7_utils__RK2MidpointGeneralizedDerivSecondOrderODEIntegrator;

extern "C" {

ATTRIBUTES attrer7_utils__RK2MidpointGeneralizedStepSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_pos", "double", "1", "", "",
  "n Position at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"posdot", "double", "1", "", "",
  "n Position derivatives.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__RK2MidpointGeneralizedStepSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__RK2MidpointGeneralizedStepSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__RK2MidpointGeneralizedStepSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::RK2MidpointSecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__RK2MidpointGeneralizedStepSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__RK2MidpointGeneralizedStepSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__RK2MidpointGeneralizedStepSecondOrderODEIntegrator() {
    return sizeof(er7_utils::RK2MidpointGeneralizedStepSecondOrderODEIntegrator) ;
}

void* io_src_allocate_er7_utils__RK2MidpointGeneralizedStepSecondOrderODEIntegrator(int num) {
    er7_utils::RK2MidpointGeneralizedStepSecondOrderODEIntegrator* temp = (er7_utils::RK2MidpointGeneralizedStepSecondOrderODEIntegrator*)calloc(num, sizeof(er7_utils::RK2MidpointGeneralizedStepSecondOrderODEIntegrator));
    for (int ii = 0; ii < num; ++ii) {
        new(&temp[ii]) er7_utils::RK2MidpointGeneralizedStepSecondOrderODEIntegrator();
    }
    return (void*)temp;
}

void io_src_destruct_er7_utils__RK2MidpointGeneralizedStepSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::RK2MidpointGeneralizedStepSecondOrderODEIntegrator* temp = (er7_utils::RK2MidpointGeneralizedStepSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~RK2MidpointGeneralizedStepSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__RK2MidpointGeneralizedStepSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::RK2MidpointGeneralizedStepSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__RK2MidpointGeneralizedStepSecondOrderODEIntegrator {
    UnitsMaper7_utils__RK2MidpointGeneralizedStepSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("RK2MidpointGeneralizedStepSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("RK2MidpointGeneralizedStepSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("RK2MidpointGeneralizedStepSecondOrderODEIntegrator_init_pos", "1") ;
        units_map_ptr->add_param("RK2MidpointGeneralizedStepSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("RK2MidpointGeneralizedStepSecondOrderODEIntegrator_posdot", "1") ;
        units_map_ptr->add_param("RK2MidpointGeneralizedStepSecondOrderODEIntegrator_dtheta", "1") ;
    }
} umer7_utils__RK2MidpointGeneralizedStepSecondOrderODEIntegrator;

