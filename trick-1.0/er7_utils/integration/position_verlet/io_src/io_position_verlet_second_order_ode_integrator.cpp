/**
 * This file was automatically generated by the ICG based on the file:
 * /users/agirish/trick_tutorial/trick/trick_source/er7_utils/integration/position_verlet/include/position_verlet_second_order_ode_integrator.hh
 * This file contains database parameter declarations specific to the
 * data structures and enumerated types declared in the above file.
 * These database parameters are used by the Trick input and
 * data recording processors to gain access to important simulation
 * variable information.
 */

#define TRICK_IN_IOSRC
#include <stdlib.h>
#include "trick/MemoryManager.hh"
#include "trick/attributes.h"
#include "trick/parameter_types.h"
#include "trick/ClassSizeCheck.hh"
#include "trick/UnitsMap.hh"
#include "trick/checkpoint_stl.hh"
#include "/users/agirish/trick_tutorial/trick/trick_source/er7_utils/integration/position_verlet/include/position_verlet_second_order_ode_integrator.hh"

extern "C" {

ATTRIBUTES attrer7_utils__PositionVerletSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"posdot", "double", "1", "", "",
  "n Derivative of generalized position.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Generalized position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"h_dtheta", "double", "1", "", "",
  "n Half of the generalized position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"midpoint", "double", "1", "", "",
  "n Leapfrog position.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of the current integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  88, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"prev_accel", "double", "1", "", "",
  "n Acceleration at the end of the previous integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  96, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"restart", "bool", "1", "", "",
  "n Make an initial half step when set. This flag is set initially and after a call to reset. The flag is cleared upon making that half step.",
  15,TRICK_BOOLEAN, sizeof(bool), 0, 0, Language_CPP, 4,
  104, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__PositionVerletSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__PositionVerletSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__PositionVerletSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::SecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__PositionVerletSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__PositionVerletSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__PositionVerletSecondOrderODEIntegrator() {
    return sizeof(er7_utils::PositionVerletSecondOrderODEIntegrator) ;
}

void io_src_destruct_er7_utils__PositionVerletSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::PositionVerletSecondOrderODEIntegrator* temp = (er7_utils::PositionVerletSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~PositionVerletSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__PositionVerletSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::PositionVerletSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__PositionVerletSecondOrderODEIntegrator {
    UnitsMaper7_utils__PositionVerletSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("PositionVerletSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("PositionVerletSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("PositionVerletSecondOrderODEIntegrator_posdot", "1") ;
        units_map_ptr->add_param("PositionVerletSecondOrderODEIntegrator_dtheta", "1") ;
        units_map_ptr->add_param("PositionVerletSecondOrderODEIntegrator_h_dtheta", "1") ;
        units_map_ptr->add_param("PositionVerletSecondOrderODEIntegrator_midpoint", "1") ;
        units_map_ptr->add_param("PositionVerletSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("PositionVerletSecondOrderODEIntegrator_prev_accel", "1") ;
        units_map_ptr->add_param("PositionVerletSecondOrderODEIntegrator_restart", "1") ;
    }
} umer7_utils__PositionVerletSecondOrderODEIntegrator;

extern "C" {

ATTRIBUTES attrer7_utils__PositionVerletSimpleSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"posdot", "double", "1", "", "",
  "n Derivative of generalized position.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Generalized position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"h_dtheta", "double", "1", "", "",
  "n Half of the generalized position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"midpoint", "double", "1", "", "",
  "n Leapfrog position.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of the current integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  88, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"prev_accel", "double", "1", "", "",
  "n Acceleration at the end of the previous integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  96, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"restart", "bool", "1", "", "",
  "n Make an initial half step when set. This flag is set initially and after a call to reset. The flag is cleared upon making that half step.",
  15,TRICK_BOOLEAN, sizeof(bool), 0, 0, Language_CPP, 4,
  104, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__PositionVerletSimpleSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__PositionVerletSimpleSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__PositionVerletSimpleSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::PositionVerletSecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__PositionVerletSimpleSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__PositionVerletSimpleSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__PositionVerletSimpleSecondOrderODEIntegrator() {
    return sizeof(er7_utils::PositionVerletSimpleSecondOrderODEIntegrator) ;
}

void* io_src_allocate_er7_utils__PositionVerletSimpleSecondOrderODEIntegrator(int num) {
    er7_utils::PositionVerletSimpleSecondOrderODEIntegrator* temp = (er7_utils::PositionVerletSimpleSecondOrderODEIntegrator*)calloc(num, sizeof(er7_utils::PositionVerletSimpleSecondOrderODEIntegrator));
    for (int ii = 0; ii < num; ++ii) {
        new(&temp[ii]) er7_utils::PositionVerletSimpleSecondOrderODEIntegrator();
    }
    return (void*)temp;
}

void io_src_destruct_er7_utils__PositionVerletSimpleSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::PositionVerletSimpleSecondOrderODEIntegrator* temp = (er7_utils::PositionVerletSimpleSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~PositionVerletSimpleSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__PositionVerletSimpleSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::PositionVerletSimpleSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__PositionVerletSimpleSecondOrderODEIntegrator {
    UnitsMaper7_utils__PositionVerletSimpleSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("PositionVerletSimpleSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("PositionVerletSimpleSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("PositionVerletSimpleSecondOrderODEIntegrator_posdot", "1") ;
        units_map_ptr->add_param("PositionVerletSimpleSecondOrderODEIntegrator_dtheta", "1") ;
        units_map_ptr->add_param("PositionVerletSimpleSecondOrderODEIntegrator_h_dtheta", "1") ;
        units_map_ptr->add_param("PositionVerletSimpleSecondOrderODEIntegrator_midpoint", "1") ;
        units_map_ptr->add_param("PositionVerletSimpleSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("PositionVerletSimpleSecondOrderODEIntegrator_prev_accel", "1") ;
        units_map_ptr->add_param("PositionVerletSimpleSecondOrderODEIntegrator_restart", "1") ;
    }
} umer7_utils__PositionVerletSimpleSecondOrderODEIntegrator;

extern "C" {

ATTRIBUTES attrer7_utils__PositionVerletGeneralizedDerivSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"posdot", "double", "1", "", "",
  "n Derivative of generalized position.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Generalized position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"h_dtheta", "double", "1", "", "",
  "n Half of the generalized position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"midpoint", "double", "1", "", "",
  "n Leapfrog position.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of the current integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  88, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"prev_accel", "double", "1", "", "",
  "n Acceleration at the end of the previous integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  96, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"restart", "bool", "1", "", "",
  "n Make an initial half step when set. This flag is set initially and after a call to reset. The flag is cleared upon making that half step.",
  15,TRICK_BOOLEAN, sizeof(bool), 0, 0, Language_CPP, 4,
  104, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__PositionVerletGeneralizedDerivSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__PositionVerletGeneralizedDerivSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__PositionVerletGeneralizedDerivSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::PositionVerletSecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__PositionVerletGeneralizedDerivSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__PositionVerletGeneralizedDerivSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__PositionVerletGeneralizedDerivSecondOrderODEIntegrator() {
    return sizeof(er7_utils::PositionVerletGeneralizedDerivSecondOrderODEIntegrator) ;
}

void* io_src_allocate_er7_utils__PositionVerletGeneralizedDerivSecondOrderODEIntegrator(int num) {
    er7_utils::PositionVerletGeneralizedDerivSecondOrderODEIntegrator* temp = (er7_utils::PositionVerletGeneralizedDerivSecondOrderODEIntegrator*)calloc(num, sizeof(er7_utils::PositionVerletGeneralizedDerivSecondOrderODEIntegrator));
    for (int ii = 0; ii < num; ++ii) {
        new(&temp[ii]) er7_utils::PositionVerletGeneralizedDerivSecondOrderODEIntegrator();
    }
    return (void*)temp;
}

void io_src_destruct_er7_utils__PositionVerletGeneralizedDerivSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::PositionVerletGeneralizedDerivSecondOrderODEIntegrator* temp = (er7_utils::PositionVerletGeneralizedDerivSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~PositionVerletGeneralizedDerivSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__PositionVerletGeneralizedDerivSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::PositionVerletGeneralizedDerivSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__PositionVerletGeneralizedDerivSecondOrderODEIntegrator {
    UnitsMaper7_utils__PositionVerletGeneralizedDerivSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("PositionVerletGeneralizedDerivSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedDerivSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedDerivSecondOrderODEIntegrator_posdot", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedDerivSecondOrderODEIntegrator_dtheta", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedDerivSecondOrderODEIntegrator_h_dtheta", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedDerivSecondOrderODEIntegrator_midpoint", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedDerivSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedDerivSecondOrderODEIntegrator_prev_accel", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedDerivSecondOrderODEIntegrator_restart", "1") ;
    }
} umer7_utils__PositionVerletGeneralizedDerivSecondOrderODEIntegrator;

extern "C" {

ATTRIBUTES attrer7_utils__PositionVerletGeneralizedStepSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"posdot", "double", "1", "", "",
  "n Derivative of generalized position.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Generalized position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"h_dtheta", "double", "1", "", "",
  "n Half of the generalized position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"midpoint", "double", "1", "", "",
  "n Leapfrog position.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of the current integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  88, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"prev_accel", "double", "1", "", "",
  "n Acceleration at the end of the previous integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  96, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"restart", "bool", "1", "", "",
  "n Make an initial half step when set. This flag is set initially and after a call to reset. The flag is cleared upon making that half step.",
  15,TRICK_BOOLEAN, sizeof(bool), 0, 0, Language_CPP, 4,
  104, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__PositionVerletGeneralizedStepSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__PositionVerletGeneralizedStepSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__PositionVerletGeneralizedStepSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::PositionVerletSecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__PositionVerletGeneralizedStepSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__PositionVerletGeneralizedStepSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__PositionVerletGeneralizedStepSecondOrderODEIntegrator() {
    return sizeof(er7_utils::PositionVerletGeneralizedStepSecondOrderODEIntegrator) ;
}

void* io_src_allocate_er7_utils__PositionVerletGeneralizedStepSecondOrderODEIntegrator(int num) {
    er7_utils::PositionVerletGeneralizedStepSecondOrderODEIntegrator* temp = (er7_utils::PositionVerletGeneralizedStepSecondOrderODEIntegrator*)calloc(num, sizeof(er7_utils::PositionVerletGeneralizedStepSecondOrderODEIntegrator));
    for (int ii = 0; ii < num; ++ii) {
        new(&temp[ii]) er7_utils::PositionVerletGeneralizedStepSecondOrderODEIntegrator();
    }
    return (void*)temp;
}

void io_src_destruct_er7_utils__PositionVerletGeneralizedStepSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::PositionVerletGeneralizedStepSecondOrderODEIntegrator* temp = (er7_utils::PositionVerletGeneralizedStepSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~PositionVerletGeneralizedStepSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__PositionVerletGeneralizedStepSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::PositionVerletGeneralizedStepSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__PositionVerletGeneralizedStepSecondOrderODEIntegrator {
    UnitsMaper7_utils__PositionVerletGeneralizedStepSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("PositionVerletGeneralizedStepSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedStepSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedStepSecondOrderODEIntegrator_posdot", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedStepSecondOrderODEIntegrator_dtheta", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedStepSecondOrderODEIntegrator_h_dtheta", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedStepSecondOrderODEIntegrator_midpoint", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedStepSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedStepSecondOrderODEIntegrator_prev_accel", "1") ;
        units_map_ptr->add_param("PositionVerletGeneralizedStepSecondOrderODEIntegrator_restart", "1") ;
    }
} umer7_utils__PositionVerletGeneralizedStepSecondOrderODEIntegrator;

