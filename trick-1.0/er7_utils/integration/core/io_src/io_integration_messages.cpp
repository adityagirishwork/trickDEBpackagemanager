/**
 * This file was automatically generated by the ICG based on the file:
 * /users/agirish/trick_tutorial/trick/trick_source/er7_utils/integration/core/include/integration_messages.hh
 * This file contains database parameter declarations specific to the
 * data structures and enumerated types declared in the above file.
 * These database parameters are used by the Trick input and
 * data recording processors to gain access to important simulation
 * variable information.
 */

#define TRICK_IN_IOSRC
#include <stdlib.h>
#include "trick/MemoryManager.hh"
#include "trick/attributes.h"
#include "trick/parameter_types.h"
#include "trick/ClassSizeCheck.hh"
#include "trick/UnitsMap.hh"
#include "trick/checkpoint_stl.hh"
#include "/users/agirish/trick_tutorial/trick/trick_source/er7_utils/integration/core/include/integration_messages.hh"

extern "C" {

ATTRIBUTES attrer7_utils__IntegrationMessages[] = {
{"unsupported_option", "char", "1", "", "",
  "n Issued when some user input is invalid.",
  15,TRICK_CHARACTER, sizeof(char), 0, 0, Language_CPP, 6,
  0, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"invalid_item", "char", "1", "", "",
  "n Issued when an item is somehow invalid; a duplicate entry for example.",
  15,TRICK_CHARACTER, sizeof(char), 0, 0, Language_CPP, 6,
  0, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"internal_error", "char", "1", "", "",
  "n Issued when the ER7_UTILS programmer messed up.",
  15,TRICK_CHARACTER, sizeof(char), 0, 0, Language_CPP, 6,
  0, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"invalid_request", "char", "1", "", "",
  "n Issued when a non-ER7_UTILS programmer messed up.",
  15,TRICK_CHARACTER, sizeof(char), 0, 0, Language_CPP, 6,
  0, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"information", "char", "1", "", "",
  "n Issued in non-error messages.",
  15,TRICK_CHARACTER, sizeof(char), 0, 0, Language_CPP, 6,
  0, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__IntegrationMessages() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    attrer7_utils__IntegrationMessages[0].offset = (long)(void *)&er7_utils::IntegrationMessages::unsupported_option ;
    attrer7_utils__IntegrationMessages[1].offset = (long)(void *)&er7_utils::IntegrationMessages::invalid_item ;
    attrer7_utils__IntegrationMessages[2].offset = (long)(void *)&er7_utils::IntegrationMessages::internal_error ;
    attrer7_utils__IntegrationMessages[3].offset = (long)(void *)&er7_utils::IntegrationMessages::invalid_request ;
    attrer7_utils__IntegrationMessages[4].offset = (long)(void *)&er7_utils::IntegrationMessages::information ;
}
}

extern "C" {

void init_attrer7_utils__IntegrationMessages_c_intf() {
    er7_utils::init_attrer7_utils__IntegrationMessages() ;
}

size_t io_src_sizeof_er7_utils__IntegrationMessages() {
    return sizeof(er7_utils::IntegrationMessages) ;
}


} //extern "C"

struct UnitsMaper7_utils__IntegrationMessages {
    UnitsMaper7_utils__IntegrationMessages() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("IntegrationMessages_unsupported_option", "1") ;
        units_map_ptr->add_param("IntegrationMessages_invalid_item", "1") ;
        units_map_ptr->add_param("IntegrationMessages_internal_error", "1") ;
        units_map_ptr->add_param("IntegrationMessages_invalid_request", "1") ;
        units_map_ptr->add_param("IntegrationMessages_information", "1") ;
    }
} umer7_utils__IntegrationMessages;

