/**
 * This file was automatically generated by the ICG based on the file:
 * /users/agirish/trick_tutorial/trick/trick_source/er7_utils/integration/rk2_heun/include/rk2_heun_second_order_ode_integrator.hh
 * This file contains database parameter declarations specific to the
 * data structures and enumerated types declared in the above file.
 * These database parameters are used by the Trick input and
 * data recording processors to gain access to important simulation
 * variable information.
 */

#define TRICK_IN_IOSRC
#include <stdlib.h>
#include "trick/MemoryManager.hh"
#include "trick/attributes.h"
#include "trick/parameter_types.h"
#include "trick/ClassSizeCheck.hh"
#include "trick/UnitsMap.hh"
#include "trick/checkpoint_stl.hh"
#include "/users/agirish/trick_tutorial/trick/trick_source/er7_utils/integration/rk2_heun/include/rk2_heun_second_order_ode_integrator.hh"

extern "C" {

ATTRIBUTES attrer7_utils__RK2HeunSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_pos", "double", "1", "", "",
  "n Position at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_acc", "double", "1", "", "",
  "n Velocity time derivative at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_posdot", "double", "1", "", "",
  "n Position derivative at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  88, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"final_posdot", "double", "1", "", "",
  "n Position derivative at the end of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  96, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__RK2HeunSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__RK2HeunSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__RK2HeunSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::SecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__RK2HeunSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__RK2HeunSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__RK2HeunSecondOrderODEIntegrator() {
    return sizeof(er7_utils::RK2HeunSecondOrderODEIntegrator) ;
}

void io_src_destruct_er7_utils__RK2HeunSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::RK2HeunSecondOrderODEIntegrator* temp = (er7_utils::RK2HeunSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~RK2HeunSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__RK2HeunSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::RK2HeunSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__RK2HeunSecondOrderODEIntegrator {
    UnitsMaper7_utils__RK2HeunSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("RK2HeunSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("RK2HeunSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("RK2HeunSecondOrderODEIntegrator_init_pos", "1") ;
        units_map_ptr->add_param("RK2HeunSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("RK2HeunSecondOrderODEIntegrator_init_acc", "1") ;
        units_map_ptr->add_param("RK2HeunSecondOrderODEIntegrator_dtheta", "1") ;
        units_map_ptr->add_param("RK2HeunSecondOrderODEIntegrator_init_posdot", "1") ;
        units_map_ptr->add_param("RK2HeunSecondOrderODEIntegrator_final_posdot", "1") ;
    }
} umer7_utils__RK2HeunSecondOrderODEIntegrator;

extern "C" {

ATTRIBUTES attrer7_utils__RK2HeunSimpleSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_pos", "double", "1", "", "",
  "n Position at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_acc", "double", "1", "", "",
  "n Velocity time derivative at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_posdot", "double", "1", "", "",
  "n Position derivative at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  88, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"final_posdot", "double", "1", "", "",
  "n Position derivative at the end of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  96, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__RK2HeunSimpleSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__RK2HeunSimpleSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__RK2HeunSimpleSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::RK2HeunSecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__RK2HeunSimpleSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__RK2HeunSimpleSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__RK2HeunSimpleSecondOrderODEIntegrator() {
    return sizeof(er7_utils::RK2HeunSimpleSecondOrderODEIntegrator) ;
}

void* io_src_allocate_er7_utils__RK2HeunSimpleSecondOrderODEIntegrator(int num) {
    er7_utils::RK2HeunSimpleSecondOrderODEIntegrator* temp = (er7_utils::RK2HeunSimpleSecondOrderODEIntegrator*)calloc(num, sizeof(er7_utils::RK2HeunSimpleSecondOrderODEIntegrator));
    for (int ii = 0; ii < num; ++ii) {
        new(&temp[ii]) er7_utils::RK2HeunSimpleSecondOrderODEIntegrator();
    }
    return (void*)temp;
}

void io_src_destruct_er7_utils__RK2HeunSimpleSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::RK2HeunSimpleSecondOrderODEIntegrator* temp = (er7_utils::RK2HeunSimpleSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~RK2HeunSimpleSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__RK2HeunSimpleSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::RK2HeunSimpleSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__RK2HeunSimpleSecondOrderODEIntegrator {
    UnitsMaper7_utils__RK2HeunSimpleSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("RK2HeunSimpleSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("RK2HeunSimpleSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("RK2HeunSimpleSecondOrderODEIntegrator_init_pos", "1") ;
        units_map_ptr->add_param("RK2HeunSimpleSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("RK2HeunSimpleSecondOrderODEIntegrator_init_acc", "1") ;
        units_map_ptr->add_param("RK2HeunSimpleSecondOrderODEIntegrator_dtheta", "1") ;
        units_map_ptr->add_param("RK2HeunSimpleSecondOrderODEIntegrator_init_posdot", "1") ;
        units_map_ptr->add_param("RK2HeunSimpleSecondOrderODEIntegrator_final_posdot", "1") ;
    }
} umer7_utils__RK2HeunSimpleSecondOrderODEIntegrator;

extern "C" {

ATTRIBUTES attrer7_utils__RK2HeunGeneralizedDerivSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_pos", "double", "1", "", "",
  "n Position at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_acc", "double", "1", "", "",
  "n Velocity time derivative at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_posdot", "double", "1", "", "",
  "n Position derivative at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  88, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"final_posdot", "double", "1", "", "",
  "n Position derivative at the end of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  96, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__RK2HeunGeneralizedDerivSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__RK2HeunGeneralizedDerivSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__RK2HeunGeneralizedDerivSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::RK2HeunSecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__RK2HeunGeneralizedDerivSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__RK2HeunGeneralizedDerivSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__RK2HeunGeneralizedDerivSecondOrderODEIntegrator() {
    return sizeof(er7_utils::RK2HeunGeneralizedDerivSecondOrderODEIntegrator) ;
}

void* io_src_allocate_er7_utils__RK2HeunGeneralizedDerivSecondOrderODEIntegrator(int num) {
    er7_utils::RK2HeunGeneralizedDerivSecondOrderODEIntegrator* temp = (er7_utils::RK2HeunGeneralizedDerivSecondOrderODEIntegrator*)calloc(num, sizeof(er7_utils::RK2HeunGeneralizedDerivSecondOrderODEIntegrator));
    for (int ii = 0; ii < num; ++ii) {
        new(&temp[ii]) er7_utils::RK2HeunGeneralizedDerivSecondOrderODEIntegrator();
    }
    return (void*)temp;
}

void io_src_destruct_er7_utils__RK2HeunGeneralizedDerivSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::RK2HeunGeneralizedDerivSecondOrderODEIntegrator* temp = (er7_utils::RK2HeunGeneralizedDerivSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~RK2HeunGeneralizedDerivSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__RK2HeunGeneralizedDerivSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::RK2HeunGeneralizedDerivSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__RK2HeunGeneralizedDerivSecondOrderODEIntegrator {
    UnitsMaper7_utils__RK2HeunGeneralizedDerivSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("RK2HeunGeneralizedDerivSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedDerivSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedDerivSecondOrderODEIntegrator_init_pos", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedDerivSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedDerivSecondOrderODEIntegrator_init_acc", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedDerivSecondOrderODEIntegrator_dtheta", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedDerivSecondOrderODEIntegrator_init_posdot", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedDerivSecondOrderODEIntegrator_final_posdot", "1") ;
    }
} umer7_utils__RK2HeunGeneralizedDerivSecondOrderODEIntegrator;

extern "C" {

ATTRIBUTES attrer7_utils__RK2HeunGeneralizedStepSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_pos", "double", "1", "", "",
  "n Position at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_acc", "double", "1", "", "",
  "n Velocity time derivative at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_posdot", "double", "1", "", "",
  "n Position derivative at the start of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  88, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"final_posdot", "double", "1", "", "",
  "n Position derivative at the end of an integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  96, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__RK2HeunGeneralizedStepSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__RK2HeunGeneralizedStepSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__RK2HeunGeneralizedStepSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::RK2HeunSecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__RK2HeunGeneralizedStepSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__RK2HeunGeneralizedStepSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__RK2HeunGeneralizedStepSecondOrderODEIntegrator() {
    return sizeof(er7_utils::RK2HeunGeneralizedStepSecondOrderODEIntegrator) ;
}

void* io_src_allocate_er7_utils__RK2HeunGeneralizedStepSecondOrderODEIntegrator(int num) {
    er7_utils::RK2HeunGeneralizedStepSecondOrderODEIntegrator* temp = (er7_utils::RK2HeunGeneralizedStepSecondOrderODEIntegrator*)calloc(num, sizeof(er7_utils::RK2HeunGeneralizedStepSecondOrderODEIntegrator));
    for (int ii = 0; ii < num; ++ii) {
        new(&temp[ii]) er7_utils::RK2HeunGeneralizedStepSecondOrderODEIntegrator();
    }
    return (void*)temp;
}

void io_src_destruct_er7_utils__RK2HeunGeneralizedStepSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::RK2HeunGeneralizedStepSecondOrderODEIntegrator* temp = (er7_utils::RK2HeunGeneralizedStepSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~RK2HeunGeneralizedStepSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__RK2HeunGeneralizedStepSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::RK2HeunGeneralizedStepSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__RK2HeunGeneralizedStepSecondOrderODEIntegrator {
    UnitsMaper7_utils__RK2HeunGeneralizedStepSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("RK2HeunGeneralizedStepSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedStepSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedStepSecondOrderODEIntegrator_init_pos", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedStepSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedStepSecondOrderODEIntegrator_init_acc", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedStepSecondOrderODEIntegrator_dtheta", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedStepSecondOrderODEIntegrator_init_posdot", "1") ;
        units_map_ptr->add_param("RK2HeunGeneralizedStepSecondOrderODEIntegrator_final_posdot", "1") ;
    }
} umer7_utils__RK2HeunGeneralizedStepSecondOrderODEIntegrator;

