/**
 * This file was automatically generated by the ICG based on the file:
 * /users/agirish/trick_tutorial/trick/trick_source/er7_utils/integration/velocity_verlet/include/velocity_verlet_second_order_ode_integrator.hh
 * This file contains database parameter declarations specific to the
 * data structures and enumerated types declared in the above file.
 * These database parameters are used by the Trick input and
 * data recording processors to gain access to important simulation
 * variable information.
 */

#define TRICK_IN_IOSRC
#include <stdlib.h>
#include "trick/MemoryManager.hh"
#include "trick/attributes.h"
#include "trick/parameter_types.h"
#include "trick/ClassSizeCheck.hh"
#include "trick/UnitsMap.hh"
#include "trick/checkpoint_stl.hh"
#include "/users/agirish/trick_tutorial/trick/trick_source/er7_utils/integration/velocity_verlet/include/velocity_verlet_second_order_ode_integrator.hh"

extern "C" {

ATTRIBUTES attrer7_utils__VelocityVerletSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of the integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_acc", "double", "1", "", "",
  "n Acceleration at the start of the integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Generalized position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"posdot", "double", "1", "", "",
  "n Position derivative at the first step of the integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__VelocityVerletSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__VelocityVerletSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__VelocityVerletSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::SecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__VelocityVerletSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__VelocityVerletSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__VelocityVerletSecondOrderODEIntegrator() {
    return sizeof(er7_utils::VelocityVerletSecondOrderODEIntegrator) ;
}

void io_src_destruct_er7_utils__VelocityVerletSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::VelocityVerletSecondOrderODEIntegrator* temp = (er7_utils::VelocityVerletSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~VelocityVerletSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__VelocityVerletSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::VelocityVerletSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__VelocityVerletSecondOrderODEIntegrator {
    UnitsMaper7_utils__VelocityVerletSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("VelocityVerletSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("VelocityVerletSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("VelocityVerletSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("VelocityVerletSecondOrderODEIntegrator_init_acc", "1") ;
        units_map_ptr->add_param("VelocityVerletSecondOrderODEIntegrator_dtheta", "1") ;
        units_map_ptr->add_param("VelocityVerletSecondOrderODEIntegrator_posdot", "1") ;
    }
} umer7_utils__VelocityVerletSecondOrderODEIntegrator;

extern "C" {

ATTRIBUTES attrer7_utils__VelocityVerletSimpleSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of the integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_acc", "double", "1", "", "",
  "n Acceleration at the start of the integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Generalized position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"posdot", "double", "1", "", "",
  "n Position derivative at the first step of the integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__VelocityVerletSimpleSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__VelocityVerletSimpleSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__VelocityVerletSimpleSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::VelocityVerletSecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__VelocityVerletSimpleSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__VelocityVerletSimpleSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__VelocityVerletSimpleSecondOrderODEIntegrator() {
    return sizeof(er7_utils::VelocityVerletSimpleSecondOrderODEIntegrator) ;
}

void* io_src_allocate_er7_utils__VelocityVerletSimpleSecondOrderODEIntegrator(int num) {
    er7_utils::VelocityVerletSimpleSecondOrderODEIntegrator* temp = (er7_utils::VelocityVerletSimpleSecondOrderODEIntegrator*)calloc(num, sizeof(er7_utils::VelocityVerletSimpleSecondOrderODEIntegrator));
    for (int ii = 0; ii < num; ++ii) {
        new(&temp[ii]) er7_utils::VelocityVerletSimpleSecondOrderODEIntegrator();
    }
    return (void*)temp;
}

void io_src_destruct_er7_utils__VelocityVerletSimpleSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::VelocityVerletSimpleSecondOrderODEIntegrator* temp = (er7_utils::VelocityVerletSimpleSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~VelocityVerletSimpleSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__VelocityVerletSimpleSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::VelocityVerletSimpleSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__VelocityVerletSimpleSecondOrderODEIntegrator {
    UnitsMaper7_utils__VelocityVerletSimpleSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("VelocityVerletSimpleSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("VelocityVerletSimpleSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("VelocityVerletSimpleSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("VelocityVerletSimpleSecondOrderODEIntegrator_init_acc", "1") ;
        units_map_ptr->add_param("VelocityVerletSimpleSecondOrderODEIntegrator_dtheta", "1") ;
        units_map_ptr->add_param("VelocityVerletSimpleSecondOrderODEIntegrator_posdot", "1") ;
    }
} umer7_utils__VelocityVerletSimpleSecondOrderODEIntegrator;

extern "C" {

ATTRIBUTES attrer7_utils__VelocityVerletGeneralizedDerivSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of the integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_acc", "double", "1", "", "",
  "n Acceleration at the start of the integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Generalized position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"posdot", "double", "1", "", "",
  "n Position derivative at the first step of the integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__VelocityVerletGeneralizedDerivSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__VelocityVerletGeneralizedDerivSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__VelocityVerletGeneralizedDerivSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::VelocityVerletSecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__VelocityVerletGeneralizedDerivSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__VelocityVerletGeneralizedDerivSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__VelocityVerletGeneralizedDerivSecondOrderODEIntegrator() {
    return sizeof(er7_utils::VelocityVerletGeneralizedDerivSecondOrderODEIntegrator) ;
}

void* io_src_allocate_er7_utils__VelocityVerletGeneralizedDerivSecondOrderODEIntegrator(int num) {
    er7_utils::VelocityVerletGeneralizedDerivSecondOrderODEIntegrator* temp = (er7_utils::VelocityVerletGeneralizedDerivSecondOrderODEIntegrator*)calloc(num, sizeof(er7_utils::VelocityVerletGeneralizedDerivSecondOrderODEIntegrator));
    for (int ii = 0; ii < num; ++ii) {
        new(&temp[ii]) er7_utils::VelocityVerletGeneralizedDerivSecondOrderODEIntegrator();
    }
    return (void*)temp;
}

void io_src_destruct_er7_utils__VelocityVerletGeneralizedDerivSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::VelocityVerletGeneralizedDerivSecondOrderODEIntegrator* temp = (er7_utils::VelocityVerletGeneralizedDerivSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~VelocityVerletGeneralizedDerivSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__VelocityVerletGeneralizedDerivSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::VelocityVerletGeneralizedDerivSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__VelocityVerletGeneralizedDerivSecondOrderODEIntegrator {
    UnitsMaper7_utils__VelocityVerletGeneralizedDerivSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("VelocityVerletGeneralizedDerivSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("VelocityVerletGeneralizedDerivSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("VelocityVerletGeneralizedDerivSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("VelocityVerletGeneralizedDerivSecondOrderODEIntegrator_init_acc", "1") ;
        units_map_ptr->add_param("VelocityVerletGeneralizedDerivSecondOrderODEIntegrator_dtheta", "1") ;
        units_map_ptr->add_param("VelocityVerletGeneralizedDerivSecondOrderODEIntegrator_posdot", "1") ;
    }
} umer7_utils__VelocityVerletGeneralizedDerivSecondOrderODEIntegrator;

extern "C" {

ATTRIBUTES attrer7_utils__VelocityVerletGeneralizedStepSecondOrderODEIntegrator[] = {
{"state_size", "int", "1", "", "",
  "n The sizes of the generalized position and generalized velocity vectors.",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  40, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"problem_type", "er7_utils::Integration::ODEProblemType", "1", "", "",
  "n The type of problem to be solved.",
  15,TRICK_ENUMERATED, 0, 0, 0, Language_CPP, 4,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_vel", "double", "1", "", "",
  "n Velocity at the start of the integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  56, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"init_acc", "double", "1", "", "",
  "n Acceleration at the start of the integration interval.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  64, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dtheta", "double", "1", "", "",
  "n Generalized position step.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  72, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"posdot", "double", "1", "", "",
  "n Position derivative at the first step of the integration cycle.",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  80, NULL, 1, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"

namespace er7_utils {

void init_attrer7_utils__VelocityVerletGeneralizedStepSecondOrderODEIntegrator() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrer7_utils__VelocityVerletGeneralizedStepSecondOrderODEIntegrator[1].type_name) , &attrer7_utils__VelocityVerletGeneralizedStepSecondOrderODEIntegrator[1], __FILE__ , __LINE__ ) ;

    ATTRIBUTES temp_attr ;

    trick_MM->add_attr_info( std::string("er7_utils::VelocityVerletSecondOrderODEIntegrator"), &temp_attr , __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info( std::string("er7_utils::Er7UtilsDeletable"), &temp_attr , __FILE__ , __LINE__ ) ;
}
}

extern "C" {

void init_attrer7_utils__VelocityVerletGeneralizedStepSecondOrderODEIntegrator_c_intf() {
    er7_utils::init_attrer7_utils__VelocityVerletGeneralizedStepSecondOrderODEIntegrator() ;
}

size_t io_src_sizeof_er7_utils__VelocityVerletGeneralizedStepSecondOrderODEIntegrator() {
    return sizeof(er7_utils::VelocityVerletGeneralizedStepSecondOrderODEIntegrator) ;
}

void* io_src_allocate_er7_utils__VelocityVerletGeneralizedStepSecondOrderODEIntegrator(int num) {
    er7_utils::VelocityVerletGeneralizedStepSecondOrderODEIntegrator* temp = (er7_utils::VelocityVerletGeneralizedStepSecondOrderODEIntegrator*)calloc(num, sizeof(er7_utils::VelocityVerletGeneralizedStepSecondOrderODEIntegrator));
    for (int ii = 0; ii < num; ++ii) {
        new(&temp[ii]) er7_utils::VelocityVerletGeneralizedStepSecondOrderODEIntegrator();
    }
    return (void*)temp;
}

void io_src_destruct_er7_utils__VelocityVerletGeneralizedStepSecondOrderODEIntegrator(void* address __attribute__((unused)), int num __attribute__((unused))) {
    using namespace er7_utils;
    er7_utils::VelocityVerletGeneralizedStepSecondOrderODEIntegrator* temp = (er7_utils::VelocityVerletGeneralizedStepSecondOrderODEIntegrator*)address;
    for (int ii = 0; ii < num; ++ii) {
        temp[ii].~VelocityVerletGeneralizedStepSecondOrderODEIntegrator();
    }
}

void io_src_delete_er7_utils__VelocityVerletGeneralizedStepSecondOrderODEIntegrator(void* address) {
    delete (er7_utils::VelocityVerletGeneralizedStepSecondOrderODEIntegrator*)address;
}

} //extern "C"

struct UnitsMaper7_utils__VelocityVerletGeneralizedStepSecondOrderODEIntegrator {
    UnitsMaper7_utils__VelocityVerletGeneralizedStepSecondOrderODEIntegrator() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("VelocityVerletGeneralizedStepSecondOrderODEIntegrator_state_size", "1") ;
        units_map_ptr->add_param("VelocityVerletGeneralizedStepSecondOrderODEIntegrator_problem_type", "1") ;
        units_map_ptr->add_param("VelocityVerletGeneralizedStepSecondOrderODEIntegrator_init_vel", "1") ;
        units_map_ptr->add_param("VelocityVerletGeneralizedStepSecondOrderODEIntegrator_init_acc", "1") ;
        units_map_ptr->add_param("VelocityVerletGeneralizedStepSecondOrderODEIntegrator_dtheta", "1") ;
        units_map_ptr->add_param("VelocityVerletGeneralizedStepSecondOrderODEIntegrator_posdot", "1") ;
    }
} umer7_utils__VelocityVerletGeneralizedStepSecondOrderODEIntegrator;

